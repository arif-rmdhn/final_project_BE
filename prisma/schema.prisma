// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/**
 * Code Sensor Desc:
 * 11: Soil sensor
 * 22: SHT
 * CS GH BG ID => 11010101 => soil_11010101
 * CS GH 22 ID => 22012201 => SHT_22012201
 * Sekali buat;
 */

model Sensor {
  id                Int                 @id @default(autoincrement())
  id_sensor         Int                 @unique
  sensor_name       String
  description       String
  create_at         DateTime            @default(now())
  update_at         DateTime            @updatedAt
  data_sensor_soil  sensor_soil[]
  data_sensor_sht   sensor_sht[]
  data_current_soil data_current_soil[]
  data_current_sht  data_current_sht[]
}

/**
 * Save all data sensor: Create
 */
model sensor_soil {
  id           Int      @id @default(autoincrement())
  sensor       Sensor   @relation(fields: [sensor_id], references: [id_sensor], onUpdate: Cascade, onDelete: Cascade)
  sensor_id    Int      
  humadity     Float
  temperature  Float
  conductivity Float
  ph           Float
  tds          Float
  recorded_at  DateTime @default(now())
  update_at    DateTime @updatedAt
}

model sensor_sht {
  id          Int      @id @default(autoincrement())
  sensor      Sensor   @relation(fields: [sensor_id], references: [id_sensor], onUpdate: Cascade, onDelete: Cascade)
  sensor_id   Int      
  humadity    Float
  temperature Float
  recorded_at DateTime @default(now())
  update_at   DateTime @updatedAt
}

/**
 */
// Hanya Menerima QUERY PUT/UPDATE
model data_current_soil {
  id           Int      @id @default(autoincrement())
  sensor       Sensor   @relation(fields: [sensor_id], references: [id_sensor], onUpdate: Cascade, onDelete: Cascade)
  sensor_id    Int
  humadity     Float
  temperature  Float
  conductivity Float
  ph           Float
  tds          Float
  update_at    DateTime @updatedAt
}

model data_current_sht {
  id          Int      @id @default(autoincrement())
  sensor      Sensor   @relation(fields: [sensor_id], references: [id_sensor], onUpdate: Cascade, onDelete: Cascade)
  sensor_id   Int
  humadity    Float
  temperature Float
  update_at   DateTime @updatedAt
}
